genes_long <- genes %>%
filter(X=="AAGAB") %>%
gather(key = "participant_id")
genes_long <- genes_long[-1,]
### Selected the data, here I select charlson_score for continuous, icu_status and mechanical ventilation as categorial
matrix_selected <- matrix %>% select("participant_id", "charlson_score", "icu_status", "mechanical_ventilation")
### Select the AADACL3 data, and I will try to convert it from row to column
genes_long <- genes %>%
filter(X=="AAGAB") %>%
gather(key = "participant_id")
genes_long <- genes_long[-1,]
### Selected the data, here I select charlson_score for continuous, icu_status and mechanical ventilation as categorial
matrix_selected <- matrix %>% select("participant_id", "charlson_score", "icu_status", "mechanical_ventilation")
plot_data <- merge(matrix_selected, genes_long, by = "participant_id")
ggplot(plot_data, aes(x = A1BG)) +
geom_histogram(bins = 30, fill = "violet", color = "black") +
ggtitle("Histogram of A1BG Gene Expression") +
xlab("A1BG Gene Expression") +
ylab("Frequency")
ggplot(plot_data, aes(x = AAGAB)) +
geom_histogram(bins = 30, fill = "violet", color = "black") +
ggtitle("Histogram of A1BG Gene Expression") +
xlab("A1BG Gene Expression") +
ylab("Frequency")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
genes <- read.csv("QBS103_GSE157103_genes.csv")
matrix <- read.csv("QBS103_GSE157103_series_matrix.csv")
num_sample = ncol(genes) - 1
num_gene = nrow(genes)
num_sample
num_gene
### Select the AADACL3 data, and I will try to convert it from row to column
genes_long <- genes %>%
filter(X=="AAGAB") %>%
gather(key = "participant_id")
genes_long <- genes_long[-1,]
### Selected the data, here I select charlson_score for continuous, icu_status and mechanical ventilation as categorial
matrix_selected <- matrix %>% select("participant_id", "charlson_score", "icu_status", "mechanical_ventilation")
plot_data <- merge(matrix_selected, genes_long, by = "participant_id")
View(plot_data)
library(ggplot2)
# Define theme
newTheme <- theme(
# Remove all borders and grid lines
panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
# Set axis colors and size
axis.line = element_line(colour = "white", linewidth = rel(2)),
# Change all colors to light blue
plot.background = element_rect(fill = "black"),
panel.background = element_blank(),
legend.key = element_rect(fill = 'black'),
legend.background = element_rect(fill = 'black'),
# Set font
text = element_text(face="bold",colour = "white"),
axis.text = element_text(face="bold",colour = "white"),
legend.position = 'bottom')
ggplot(data, aes(x=value)) +
geom_histogram(binwidth=1, fill="blue", color="black") +
ggtitle("Histogram of Values") +
xlab("Value") +
ylab("Frequency")
ggplot(plot_data, aes(x=value)) +
geom_histogram(binwidth=1, fill="blue", color="black") +
ggtitle("Histogram of Values") +
xlab("Value") +
ylab("Frequency")
### Select the AADACL3 data, and I will try to convert it from row to column
genes_long <- genes %>%
filter(X=="AAGAB") %>%
gather(key = "participant_id")
genes_long <- genes_long[-1,]
### Selected the data, here I select charlson_score for continuous, icu_status and mechanical ventilation as categorial
matrix_selected <- matrix %>% select("participant_id", "charlson_score", "icu_status", "mechanical_ventilation")
plot_data <- merge(matrix_selected, genes_long, by = "participant_id")
plot_data$value <- as.numeric(as.character(plot_data$value))
ggplot(plot_data, aes(x=value)) +
geom_histogram(binwidth=1, fill="blue", color="black") +
ggtitle("Histogram of Values") +
xlab("Value") +
ylab("Frequency")
ggplot(plot_data, aes(x=value)) +
geom_histogram(binwidth=1, fill="violet", color="black") +
ggtitle("Histogram of Values") +
xlab("Value") +
ylab("Frequency")
library(ggplot2)
# Define theme
newTheme <- theme(
# Remove all borders and grid lines
panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
# Set axis colors and size
axis.line = element_line(colour = "white", linewidth = rel(2)),
# Change all colors to light blue
plot.background = element_rect(fill = "black"),
panel.background = element_blank(),
legend.key = element_rect(fill = 'black'),
legend.background = element_rect(fill = 'black'),
# Set font
text = element_text(face="bold",colour = "white"),
axis.text = element_text(face="bold",colour = "white"),
legend.position = 'bottom')
library(ggplot2)
# Define theme
newTheme <- theme(
# Remove all borders and grid lines
panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
# Set axis colors and size
axis.line = element_line(colour = "white", linewidth = rel(2)),
# Change all colors to light blue
plot.background = element_rect(fill = "black"),
panel.background = element_blank(),
legend.key = element_rect(fill = 'black'),
legend.background = element_rect(fill = 'black'),
# Set font
text = element_text(face="bold",colour = "white"),
axis.text = element_text(face="bold",colour = "white"),
legend.position = 'bottom')
library(ggplot2)
# Define theme
newTheme <- theme(
# Remove all borders and grid lines
panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
# Set axis colors and size
axis.line = element_line(colour = "white", linewidth = rel(2)),
# Change all colors to light blue
plot.background = element_rect(fill = "black"),
panel.background = element_blank(),
legend.key = element_rect(fill = 'black'),
legend.background = element_rect(fill = 'black'),
# Set font
text = element_text(face="bold",colour = "white"),
axis.text = element_text(face="bold",colour = "white"),
legend.position = 'bottom')
ggplot(plot_data, aes(x=value)) +
geom_histogram(binwidth=1, fill="violet", color="black") +
ggtitle("Histogram of Values") +
xlab("Value") +
ylab("Frequency")
### Select the AADACL3 data, and I will try to convert it from row to column
genes_long <- genes %>%
filter(X=="AAGAB") %>%
gather(key = "participant_id")
genes_long <- genes_long[-1,]
### Selected the data, here I select charlson_score for continuous, icu_status and mechanical ventilation as categorial
matrix_selected <- matrix %>% select("participant_id", "charlson_score", "icu_status", "mechanical_ventilation")
plot_data <- merge(matrix_selected, genes_long, by = "participant_id")
plot_data$value <- as.numeric(as.character(plot_data$value))
plot_data$charlson_score <- as.numeric(as.character(plot_data$charlson_score))
ggplot(plot_data, aes(x=charlson_score, y=value)) +
geom_point(aes(color=charlson_score), alpha=0.5) +  # Color points by charlson_score and set transparency
ggtitle("Scatterplot of Value vs. Charlson Score") +
xlab("Charlson Score") +
ylab("Value") +
theme_minimal()
ggplot(plot_data, aes(x=charlson_score, y=value)) +
geom_point(aes(color=charlson_score), alpha=0.5) +
ggtitle("Scatterplot of AAGAB gene vs. Charlson Score") +
xlab("Charlson Score") +
ylab("Value") +
theme_minimal()
ggplot(plot_data, aes(x=value)) +
geom_histogram(binwidth=1, fill="blue", color="black") +
ggtitle("Histogram of Values") +
xlab("Value") +
ylab("Frequency")
ggplot(plot_data, aes(x = icu_status, y = value)) +
geom_boxplot() +
ggtitle("Gene Value by ICU Status") +
xlab("ICU Status") +
ylab("Value") +
theme_minimal() +
theme(legend.title = element_text(size = 12), legend.text = element_text(size = 10))
ggplot(plot_data, aes(x = mechanical_ventilation, y = value)) +
geom_boxplot() +
ggtitle("Gene Value by mechanical_ventilation") +
xlab("mechanical_ventilation") +
ylab("Gene Value") +
theme_minimal() +
theme(legend.title = element_text(size = 12), legend.text = element_text(size = 10))
ggplot(plot_data, aes(x = mechanical_ventilation, y = value)) +
geom_boxplot() +
ggtitle("Gene Value by mechanical_ventilation") +
xlab("mechanical_ventilation") +
ylab("Gene Value") +
theme_minimal()
ggplot(plot_data, aes(x = icu_status, y = value)) +
geom_boxplot() +
ggtitle("Gene Value by ICU Status") +
xlab("ICU Status") +
ylab("Value") +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
genes <- read.csv("QBS103_GSE157103_genes.csv")
matrix <- read.csv("QBS103_GSE157103_series_matrix.csv")
num_sample = ncol(genes) - 1
num_gene = nrow(genes)
num_sample
num_gene
### Select the AADACL3 data, and I will try to convert it from row to column
genes_long <- genes %>%
filter(X=="AAGAB") %>%
gather(key = "participant_id")
genes_long <- genes_long[-1,]
### Selected the data, here I select charlson_score for continuous, icu_status and mechanical ventilation as categorial
matrix_selected <- matrix %>% select("participant_id", "charlson_score", "icu_status", "mechanical_ventilation")
plot_data <- merge(matrix_selected, genes_long, by = "participant_id")
plot_data$value <- as.numeric(as.character(plot_data$value))
plot_data$charlson_score <- as.numeric(as.character(plot_data$charlson_score))
library(ggplot2)
# Define theme
newTheme <- theme(
# Remove all borders and grid lines
panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
# Set axis colors and size
axis.line = element_line(colour = "white", linewidth = rel(2)),
# Change all colors to light blue
plot.background = element_rect(fill = "black"),
panel.background = element_blank(),
legend.key = element_rect(fill = 'black'),
legend.background = element_rect(fill = 'black'),
# Set font
text = element_text(face="bold",colour = "white"),
axis.text = element_text(face="bold",colour = "white"),
legend.position = 'bottom')
ggplot(plot_data, aes(x=value)) +
geom_histogram(binwidth=1, fill="blue", color="black") +
ggtitle("Histogram of Values") +
xlab("Value") +
ylab("Frequency")
ggplot(plot_data, aes(x=charlson_score, y=value)) +
geom_point(aes(color=charlson_score), alpha=0.5) +
ggtitle("Scatterplot of AAGAB gene vs. Charlson Score") +
xlab("Charlson Score") +
ylab("Value") +
theme_minimal()
ggplot(plot_data, aes(x = icu_status, y = value)) +
geom_boxplot() +
ggtitle("Gene Value by ICU Status") +
xlab("ICU Status") +
ylab("Value") +
theme_minimal()
ggplot(plot_data, aes(x = mechanical_ventilation, y = value)) +
geom_boxplot() +
ggtitle("Gene Value by mechanical_ventilation") +
xlab("mechanical_ventilation") +
ylab("Gene Value") +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
genes <- read.csv("QBS103_GSE157103_genes.csv")
matrix <- read.csv("QBS103_GSE157103_series_matrix.csv")
num_sample = ncol(genes) - 1
num_gene = nrow(genes)
num_sample
num_gene
### Select the AADACL3 data, and I will try to convert it from row to column
genes_long <- genes %>%
filter(X=="AAGAB") %>%
gather(key = "participant_id")
genes_long <- genes_long[-1,]
### Selected the data, here I select charlson_score for continuous, icu_status and mechanical ventilation as categorial
matrix_selected <- matrix %>% select("participant_id", "charlson_score", "icu_status", "mechanical_ventilation")
plot_data <- merge(matrix_selected, genes_long, by = "participant_id")
plot_data$value <- as.numeric(as.character(plot_data$value))
plot_data$charlson_score <- as.numeric(as.character(plot_data$charlson_score))
library(ggplot2)
# Define theme
newTheme <- theme(
# Remove all borders and grid lines
panel.border = element_blank(), panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
# Set axis colors and size
axis.line = element_line(colour = "white", linewidth = rel(2)),
# Change all colors to light blue
plot.background = element_rect(fill = "black"),
panel.background = element_blank(),
legend.key = element_rect(fill = 'black'),
legend.background = element_rect(fill = 'black'),
# Set font
text = element_text(face="bold",colour = "white"),
axis.text = element_text(face="bold",colour = "white"),
legend.position = 'bottom')
ggplot(plot_data, aes(x=value)) +
geom_histogram(binwidth=1, fill="blue", color="black") +
ggtitle("Histogram of Values") +
xlab("Value") +
ylab("Frequency")
ggplot(plot_data, aes(x=charlson_score, y=value)) +
geom_point(aes(color=charlson_score), alpha=0.5) +
ggtitle("Scatterplot of AAGAB gene vs. Charlson Score") +
xlab("Charlson Score") +
ylab("Value") +
theme_minimal()
ggplot(plot_data, aes(x = icu_status, y = value)) +
geom_boxplot() +
ggtitle("Gene Value by ICU Status") +
xlab("ICU Status") +
ylab("Value") +
theme_minimal()
ggplot(plot_data, aes(x = mechanical_ventilation, y = value)) +
geom_boxplot() +
ggtitle("Gene Value by mechanical_ventilation") +
xlab("mechanical_ventilation") +
ylab("Gene Value") +
theme_minimal()
set.seed(1234)
#covar <- data.frame('subjectID' = paste0('P',seq(1001:1500)),
#covar <- data.frame('subjectID' = paste0('P',seq(1001:1500)),
#'male' = rbinom(500,size = 1,prob = 0.5),
#'age' = sample(rdate(2000,min = '2010-01-01',max = '2015-12-31'),size = 500,replace = T),
#covar <- data.frame('subjectID' = paste0('P',seq(1001:1500)),
#'male' = rbinom(500,size = 1,prob = 0.5),
#'age' = sample(rdate(2000,min = '2010-01-01',max = '2015-12-31'),size = 500,replace = T),
#'datediagnsis' = sample(rdate(n = 2000,min = '2020-01-01',
#max = '2023-12-31'),size = 500,replace = T))
covar <- data.frame('subjectID' = paste0('P',seq(1001:1500)),
set.seed(1234)
covar <- data.frame('subjectID' = paste0('P',seq(1001:1500)),
#'male' = rbinom(500,size = 1,prob = 0.5),
#'age' = sample(rdate(2000,min = '2010-01-01',max = '2015-12-31'),size = 500,replace = T),
#'male' = rbinom(500,size = 1,prob = 0.5),
#'age' = sample(rdate(2000,min = '2010-01-01',max = '2015-12-31'),size = 500,replace = T),
#'datediagnsis' = sample(rdate(n = 2000,min = '2020-01-01',
#max = '2023-12-31'),size = 500,replace = T))
mutate(diagnosis.age = as.matrix(difftime(ymd(datediagnsis),ymd(age),units = 'days'))/365.25) %>%
ggplot(aes(x = diagnosis.age,fill = gender) +
scale_color_manual(values = c('skyblue2','thistle3'),labels = c('Male','Female')) +
theme_classic() + theme(legend.position = 'top')
covar <- data.frame('subjectID' = paste0('P',seq(1001:1500)),
set.seed(1234)
covar <- data.frame('subjectID' = paste0('P',seq(1001:1500)),
'male' = rbinom(500,size = 1,prob = 0.5),
'age' = sample(rdate(2000,min = '2010-01-01',max = '2015-12-31'),size = 500,replace = T),
'datediagnsis' = sample(rdate(n = 2000,min = '2020-01-01',
max = '2023-12-31'),size = 500,replace = T))
covar %>%
mutate(gender = ifelse(male ==2, 'male','female')) %>%
mutate(gender = ifelse(male ==2, 'male','female')) %>%
mutate(gender = ifelse(male ==2, 'male','female')) %>%
mutate(gender = ifelse(male ==2, 'male','female')) %>%
mutate(gender = ifelse(male ==2, 'male','female')) %>%
mutate(gender = ifelse(male ==2, 'male','female')) %>%
mutate(gender = ifelse(male ==2, 'male','female')) %>%
mutate(gender = ifelse(male ==2, 'male','female')) %>%
mutate(gender = ifelse(male ==2, 'male','female')) %>%
library(tidyverse)
library(cleaner) # rdate function
set.seed(1234)
covar <- data.frame('subjectID' = paste0('P',seq(1001:1500)),
'male' = rbinom(500,size = 1,prob = 0.5),
'age' = sample(rdate(2000,min = '2010-01-01',max = '2015-12-31'),size = 500,replace = T),
'datediagnsis' = sample(rdate(n = 2000,min = '2020-01-01',
max = '2023-12-31'),size = 500,replace = T))
covar %>%
mutate(diagnosis.age = as.matrix(difftime(ymd(datediagnsis),ymd(age),units = 'days'))/365.25) %>%
mutate(gender = ifelse(male ==2, 'male','female')) %>%
ggplot(aes(x = diagnosis.age,fill = gender)) +
geom_histogram(color = 'black',alpha = 0.6) +
scale_color_manual(values = c('skyblue2','thistle3'),labels = c('Male','Female')) +
labs(x = 'Age at Diagnosis (yrs)',y = 'Total Participants',fill = 'Gender') +
theme_classic() + theme(legend.position = 'top')
library(tidyverse)
library(cleaner) # rdate function
set.seed(1234)
covar <- data.frame('subjectID' = paste0('P',seq(1001:1500)),
'male' = rbinom(500,size = 1,prob = 0.5),
'age' = sample(rdate(2000,min = '2010-01-01',max = '2015-12-31'),size = 500,replace = T),
'datediagnsis' = sample(rdate(n = 2000,min = '2020-01-01',
max = '2023-12-31'),size = 500,replace = T))
covar %>%
mutate(diagnosis.age = as.matrix(difftime(ymd(datediagnsis),ymd(age),units = 'days'))/365.25) %>%
mutate(gender = ifelse(male ==2, 'male','female')) %>%
ggplot(aes(x = diagnosis.age,fill = gender)) +
geom_histogram(color = 'black',alpha = 0.6) +
scale_color_manual(values = c('skyblue2','thistle3'),labels = c('Male','Female')) +
labs(x = 'Age at Diagnosis (yrs)',y = 'Total Participants',fill = 'Gender') +
theme_classic() + theme(legend.position = 'top')
print(head(mtx))
mtx <- read.csv("QBS103_GSE157103_series_matrix.csv", header = TRUE)
library(tidyverse)
library(cleaner) # rdate function
set.seed(1234)
covar <- data.frame('subjectID' = paste0('P',seq(1001:1500)),
'male' = rbinom(500,size = 1,prob = 0.5),
'age' = sample(rdate(2000,min = '2010-01-01',max = '2015-12-31'),size = 500,replace = T),
'datediagnsis' = sample(rdate(n = 2000,min = '2020-01-01',
max = '2023-12-31'),size = 500,replace = T))
library(tidyverse)
library(cleaner) # rdate function
set.seed(1234)
covar <- data.frame('subjectID' = paste0('P',seq(1001:1500)),
'male' = rbinom(500,size = 1,prob = 0.5),
'age' = sample(rdate(2000,min = '2010-01-01',max = '2015-12-31'),size = 500,replace = T),
'datediagnsis' = sample(rdate(n = 2000,min = '2020-01-01',
max = '2023-12-31'),size = 500,replace = T))
covar %>%
mutate(diagnosis.age = as.matrix(difftime(ymd(datediagnsis),ymd(age),units = 'days'))/365.25) %>%
mutate(gender = ifelse(male ==2, 'male','female')) %>%
ggplot(aes(x = diagnosis.age,fill = gender)) +
geom_histogram(color = 'black',alpha = 0.6) +
scale_color_manual(values = c('skyblue2','thistle3'),labels = c('Male','Female')) +
labs(x = 'Age at Diagnosis (yrs)',y = 'Total Participants',fill = 'Gender') +
theme_classic() + theme(legend.position = 'top')
mtx <- read.csv("QBS103_GSE157103_series_matrix.csv", header = TRUE)
genes <- read.csv("QBS103_GSE157103_genes.csv", header = TRUE)
print(head(mtx))
print(head(genes))
genes <- data.frame(genes)
df <- merge(genes, mtx, by = 'row.names', all = TRUE)
rownames(df) <- df$Row.names
df_sub <- df[c("A1BG","age","sex","icu_status",)]
setwd("~/Desktop/qbs ds/Haoayng_DS_project")
setwd("~/Desktop/qbs ds/Haoayng_DS_project")
mtx <- read.csv("QBS103_GSE157103_series_matrix.csv", header = TRUE)
genes <- read.csv("QBS103_GSE157103_genes.csv", header = TRUE)
print(head(mtx))
print(head(genes))
genes <- data.frame(genes)
df <- merge(genes, mtx, by = 'row.names', all = TRUE)
rownames(df) <- df$Row.names
df_sub <- df[c("A1BG","age","sex","icu_status",)]
View(df)
View(df)
setwd("~/Desktop/qbs ds/Haoayng_DS_project")
mtx <- read.csv("QBS103_GSE157103_series_matrix.csv", header = TRUE)
genes <- read.csv("QBS103_GSE157103_genes.csv", header = TRUE)
print(head(mtx))
print(head(genes))
genes <- data.frame(genes)
df <- merge(genes, mtx, by = 'row.names', all = TRUE)
rownames(df) <- df$Row.names
df_sub <- df[c("A1BG","age","sex","icu_status",)]
df_sub <- df[c("A1BG","age","sex","icu_status")]
setwd("~/Desktop/qbs ds/Haoayng_DS_project")
mtx <- read.csv("QBS103_GSE157103_series_matrix.csv", header = TRUE)
genes <- read.csv("QBS103_GSE157103_genes.csv", header = TRUE)
print(head(mtx))
print(head(genes))
genes <- data.frame(genes)
df <- merge(genes, mtx, by = 'row.names', all = TRUE)
rownames(df) <- df$Row.names
df_sub <- df[c("A1BG","age","sex","icu_status")]
View(df)
View(mtx)
setwd("~/Desktop/qbs ds/Haoayng_DS_project")
mtx <- read.csv("QBS103_GSE157103_series_matrix.csv", header = TRUE)
genes <- read.csv("QBS103_GSE157103_genes.csv", header = TRUE)
print(head(mtx))
print(head(genes))
genes <- data.frame(genes)
View(mtx)
View(genes)
genes_long %>%
filter(X=="A1BG") %>%
gather(key = "paricipant_id")
genes_long <- genes
filter(X=="A1BG") %>%
gather(key = "paricipant_id")
genes_long <- genes %>%
filter(X=="A1BG") %>%
gather(key = "paricipant_id")
View(genes_long)
genes_long <- genes_long[-1,0]
View(genes_long)
genes_long <- data.frame(genes_long[-1,0])
genes_long <- genes %>%
filter(X=="A1BG") %>%
gather(key = "paricipant_id")
genes_long <- data.frame(genes_long[-1,0])
genes_long <- genes %>%
filter(X=="A1BG") %>%
gather(key = "paricipant_id")
genes_long <- data.frame(genes_long[-1,0])
View(genes_long)
genes_long <- genes %>%
filter(X=="A1BG") %>%
gather(key = "paricipant_id")
genes_long <- data.frame(genes_long[-1,0])
df <- merge(genes_long, mtx, by = 'paricipant_id', all = TRUE)
genes_long <- genes %>%
filter(X=="A1BG") %>%
gather(key = "paricipant_id")
genes_long <- genes_long[-1,]
df <- merge(genes_long, mtx, by = 'paricipant_id', all = TRUE)
View(genes_long)
View(mtx)
View(genes_long)
View(mtx)
df <- merge(genes_long, mtx, by = 'paticipant_id', all = TRUE)
genes_long <- genes %>%
filter(X=="A1BG") %>%
gather(key = "paticipant_id")
genes_long <- genes_long[-1,]
df <- merge(genes_long, mtx, by = 'paticipant_id', all = TRUE)
df <- merge(genes_long, mtx, "participant_id")
setwd("~/Desktop/qbs ds/Haoayng_DS_project")
mtx <- read.csv("QBS103_GSE157103_series_matrix.csv", header = TRUE)
genes <- read.csv("QBS103_GSE157103_genes.csv", header = TRUE)
print(head(mtx))
print(head(genes))
genes <- data.frame(genes)
genes_long <- genes %>%
filter(X=="A1BG") %>%
gather(key = "participant_id")
genes_long <- genes_long[-1,]
df <- merge(genes_long, mtx, "participant_id")
rownames(df) <- df$Row.names
df_sub <- df[c("A1BG","age","sex","icu_status")]
View(df)
rownames(df) <- df$Row.names
df_sub <- df[c("value","age","sex","icu_status")]
